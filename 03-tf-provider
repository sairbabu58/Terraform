Configuration provider

$ vi vars.tf [$vi terraform.tf]
# Configuration the AWS Provider
provider "aws" {
  region = "us-east-1"
}


# Configuration the AWS Provider
provider "aws" {
  region = "us-east-1"
  access_key = "AKIDH847663GDRE"              #Not recommended here
  secret_key = "wuhshgs6geb46ghfjr8d7hd7"     #Not recommended here
}




# Configuration the AWS Provider
provider "aws" {
  region = "us-east-1"
  shared_credentials_files = "/home/babuni/.aws/creds" 
}



Process to expose aws key
  $ export AWS_ACCESS_KEY="AKIHHEGD736GDT4GE"
  $ export AWS_SECRET_KEY="kjshfidhcuhdc7e65w7rfywvffwv"




=============


$ vi main.tf

resource "random_pet" "server" {
  length = 2
}

$ terraform provider
$ terraform init
$ terraform provider


==

$ vi terraform.tf

terraform {
  required_version = ">= 1.0.0"
  required_providers {
    aws = {
      source = "hashicorp/aws"
}
    http = {
      source = "hashicorp/http"
      version = "2.1.0"
}
    random = {
      source = "hashicorp/random"
      version = "3.1.0"
}
    local = {
      source = "hashicorp/local"
      version = "2.1.0"
}
    tls = {
      source = "hashicorp/tls"
      version = "3.1.0"
}
    azurerm = {
      source = "hashicorp/azurerm"
      version = "2.84.0"
      }
    }
}


$ terraform provider
$ terrraform init
$ terraform provider


====

$ vi main.tf

module "s3-bucket_example_complete" {
  source = "terraform-aws-modules/s3-bucket/aws/examples/complete"
  version = "2.10.0"
}

$ terraform init
$ terraform provider

Note: it will create a module directory structure and you will get the installed module details.

=====

$ vi main.tf

module "s3-bucket_example_complete" {
  source = "terraform-aws-modules/s3-bucket/aws/examples/complete"
  version = "2.12.0"
}

$ terraform init -upgrade
$ terraform provider

