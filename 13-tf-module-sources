# Add module source path on your terraform code to deploy the resources

Types to module source
1) Local paths
2) Terraform Registry
3) GitHub
4) HTTP Urls


Instead of writing terraform code for deploy any resources, we can also use existing module to deploy the same 


2) Terraform Registry:

Process:
1) login to this path (https://registry.terraform.io/)
2) click the modue (https://registry.terraform.io/browse/modules)
3) search the module. example autoscaling (https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws/latest)


module "autoscaling" {
  source  = "terraform-aws-modules/autoscaling/aws"
  version = "6.10.0"
  # insert the 1 required variable here

# Autoscaling group
name = "myasg"
vpc_zone_identifier = [aws_subnet.private_subnets["private_subnet_1"].id
,
aws_subnet.private_subnets["private_subnet_2"].id,
aws_subnet.private_subnets["private_subnet_3"].id]
min_size = 0
max_size = 1
desired_capacity = 1
# Launch template
use_lt = true
create_lt = true
image_id = data.aws_ami.ubuntu.id
instance_type = "t3.micro"
tags_as_map = {
Name = "Web EC2 Server 2"
}
}



  $ terraform init
  $ terraform plan
  $ terraform apply



3) GitHub
Process:
1) login to this path (https://registry.terraform.io/)
2) click the modue (https://registry.terraform.io/browse/modules)
3) search the module. example autoscaling (https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws/latest)
4) you will get the git url path on the same page. copy the url and update the code

module "autoscaling" {
source = "github.com/terraform-aws-modules/terraform-aws-autoscaling?ref
=v4.9.0"
# Autoscaling group
name = "myasg"
vpc_zone_identifier = [aws_subnet.private_subnets["private_subnet_1"].id
,
aws_subnet.private_subnets["private_subnet_2"].id,
aws_subnet.private_subnets["private_subnet_3"].id]
min_size = 0
max_size = 1
desired_capacity = 1
# Launch template
use_lt = true
create_lt = true
image_id = data.aws_ami.ubuntu.id
instance_type = "t3.micro"
tags_as_map = {
Name = "Web EC2 Server 2"

  $ terraform init
  $ terraform plan
  $ terraform apply

  
